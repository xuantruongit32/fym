/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.fym.gui;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.JTree;
import com.fym.model.*;
import java.util.HashMap;
import java.util.UUID;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;


/**
 *
 * @author v
 */
public class AccountPage extends javax.swing.JPanel {
    private BudgetManager b;
    /**
     * Creates new form AccountPage
     */
    public AccountPage(BudgetManager b) {
        this.b =b;
        initComponents();
        selectDate.setDate(new Date());
        showComboAccount();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        accountTree = new javax.swing.JTree();
        account = new javax.swing.JComboBox<>();
        deleteButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        resetAccount = new javax.swing.JButton();
        time = new javax.swing.JComboBox<>();
        selectDate = new com.toedter.calendar.JDateChooser();
        editButton = new javax.swing.JButton();

        jScrollPane1.setViewportView(accountTree);

        account.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        resetAccount.setText("O");
        resetAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetAccountActionPerformed(evt);
            }
        });

        time.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Daily", "Weekly", "Monthly", "Yearly", "All" }));
        time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(resetAccount)
                        .addGap(18, 18, 18)
                        .addComponent(account, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(selectDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editButton)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(account, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(resetAccount)
                        .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(selectDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deleteButton)
                        .addComponent(addButton)
                        .addComponent(editButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(386, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void accountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountActionPerformed
        // TODO add your handling code here:
        if(account.getSelectedIndex() != -1)
            createTree(b.getAccounts().get((String)account.getSelectedItem()),(String) time.getSelectedItem());


    }//GEN-LAST:event_accountActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int i = account.getSelectedIndex();
        String s = (String)account.getSelectedItem();
        account.setSelectedIndex(-1);
        b.removeAccount(s);
        showComboAccount();

    }//GEN-LAST:event_deleteButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        addAccount addAccount = new addAccount(b);
        addAccount.setVisible(true);

    }//GEN-LAST:event_addButtonActionPerformed

    private void resetAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetAccountActionPerformed
        // TODO add your handling code here:
        showComboAccount();
    }//GEN-LAST:event_resetAccountActionPerformed

    private void timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeActionPerformed
        // TODO add your handling code here:
        if(account.getSelectedIndex() != -1)
            createTree(b.getAccounts().get((String)account.getSelectedItem()),(String) time.getSelectedItem());

    }//GEN-LAST:event_timeActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        String previousName = b.getAccounts().get((String)account.getSelectedItem()).getName();
        double previousBalance = b.getAccounts().get((String)account.getSelectedItem()).getBalance();
        editAccount editAccount = new editAccount(b,previousName);
        editAccount.getTextName().setText(previousName);
        editAccount.getTextBalance().setText(Double.toString(previousBalance));
        editAccount.setVisible(true);
    }//GEN-LAST:event_editButtonActionPerformed

private void createTree(Account a, String time){
    DefaultMutableTreeNode name = new DefaultMutableTreeNode("Name: "+a.getName());
    DefaultMutableTreeNode balance = new DefaultMutableTreeNode("Balance:       " + String.valueOf(a.getBalance()));
    String totalIncome;
    String totalExpense;
    String totalTranfer;
    if(time.equals("Daily")){
        totalIncome = String.valueOf(b.totalIncomeDaily(selectDate.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(),a));
        totalExpense = String.valueOf(b.totalExpenseDaily(selectDate.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(),a));
        totalTranfer = String.valueOf(b.totalTranferDaily(selectDate.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(),a));
    }
    else if (time.equals("Weekly")){
        totalIncome = String.valueOf(b.totalIncomeWeekly(selectDate.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(),a));  
        totalExpense = String.valueOf(b.totalExpenseWeekly(selectDate.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(),a));
        totalTranfer = String.valueOf(b.totalTranferWeekly(selectDate.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(), a));
    }
     else if (time.equals("Monthly")){
        totalIncome = String.valueOf(b.totalIncomeMonthly(selectDate.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(),a));  
        totalExpense = String.valueOf(b.totalExpenseMonthly(selectDate.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(),a));
        totalTranfer = String.valueOf(b.totalTranferMonthly(selectDate.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(), a));
    }
    else if (time.equals("Yearly")){
        totalIncome = String.valueOf(b.totalIncomeYearly(selectDate.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(),a));
        totalExpense = String.valueOf(b.totalExpenseYearly(selectDate.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(),a));
        totalTranfer = String.valueOf(b.totalTranferYearly(selectDate.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(), a));
    }
    else {
        totalIncome = String.valueOf(b.totalIncomeAll(a));
        totalExpense = String.valueOf(b.totalExpenseAll(a));
        totalTranfer = String.valueOf(b.totalTranferAll(a));
    }
    DefaultMutableTreeNode totalIncomeNode = new DefaultMutableTreeNode("Total Income:  "+ totalIncome);
    DefaultMutableTreeNode totalExpenseNode = new DefaultMutableTreeNode("Total Expense:  "+ totalExpense);
    DefaultMutableTreeNode totalTranferNode = new DefaultMutableTreeNode("Total Tranfer: "+ totalTranfer);

    name.add(balance);
    name.add(totalIncomeNode);
    name.add(totalExpenseNode);
    name.add(totalTranferNode);
    JTree tree = new JTree(name);
    accountTree.setModel(new DefaultTreeModel(name));   
}
public void showComboAccount(){
        account.removeAllItems();
        HashMap<String,Account> data = b.getAccounts();
        for(Account c: data.values()){
            account.addItem(c.getName());
        } 
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> account;
    private javax.swing.JTree accountTree;
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton resetAccount;
    private com.toedter.calendar.JDateChooser selectDate;
    private javax.swing.JComboBox<String> time;
    // End of variables declaration//GEN-END:variables
}
